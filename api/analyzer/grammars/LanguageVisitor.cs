//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./grammars/Language.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace analyzer {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="LanguageParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ILanguageVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] LanguageParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.declaraciones"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaraciones([NotNull] LanguageParser.DeclaracionesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclaracionVariableConValor</c>
	/// labeled alternative in <see cref="LanguageParser.declaracion_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionVariableConValor([NotNull] LanguageParser.DeclaracionVariableConValorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclaracionVariableSinValor</c>
	/// labeled alternative in <see cref="LanguageParser.declaracion_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionVariableSinValor([NotNull] LanguageParser.DeclaracionVariableSinValorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclaracionImplicita</c>
	/// labeled alternative in <see cref="LanguageParser.declaracion_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionImplicita([NotNull] LanguageParser.DeclaracionImplicitaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclaracionSliceValores</c>
	/// labeled alternative in <see cref="LanguageParser.declaracion_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionSliceValores([NotNull] LanguageParser.DeclaracionSliceValoresContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclaracionSliceSinValores</c>
	/// labeled alternative in <see cref="LanguageParser.declaracion_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracionSliceSinValores([NotNull] LanguageParser.DeclaracionSliceSinValoresContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Declaracion2SliceValores</c>
	/// labeled alternative in <see cref="LanguageParser.declaracion_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracion2SliceValores([NotNull] LanguageParser.Declaracion2SliceValoresContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Declaracion2SliceSinValores</c>
	/// labeled alternative in <see cref="LanguageParser.declaracion_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracion2SliceSinValores([NotNull] LanguageParser.Declaracion2SliceSinValoresContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.valores2Slices"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValores2Slices([NotNull] LanguageParser.Valores2SlicesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.valorUnitario"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValorUnitario([NotNull] LanguageParser.ValorUnitarioContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.declaracion_structs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracion_structs([NotNull] LanguageParser.Declaracion_structsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.structBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructBody([NotNull] LanguageParser.StructBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.declaracion_variableStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracion_variableStruct([NotNull] LanguageParser.Declaracion_variableStructContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.declaracion_Fstructs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracion_Fstructs([NotNull] LanguageParser.Declaracion_FstructsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.declaracion_funciones"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaracion_funciones([NotNull] LanguageParser.Declaracion_funcionesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.parametros"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParametros([NotNull] LanguageParser.ParametrosContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Expresion</c>
	/// labeled alternative in <see cref="LanguageParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpresion([NotNull] LanguageParser.ExpresionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FmtPrint</c>
	/// labeled alternative in <see cref="LanguageParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFmtPrint([NotNull] LanguageParser.FmtPrintContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Bloque</c>
	/// labeled alternative in <see cref="LanguageParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBloque([NotNull] LanguageParser.BloqueContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>If</c>
	/// labeled alternative in <see cref="LanguageParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf([NotNull] LanguageParser.IfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForCond</c>
	/// labeled alternative in <see cref="LanguageParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForCond([NotNull] LanguageParser.ForCondContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>For</c>
	/// labeled alternative in <see cref="LanguageParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFor([NotNull] LanguageParser.ForContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Break</c>
	/// labeled alternative in <see cref="LanguageParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreak([NotNull] LanguageParser.BreakContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Continue</c>
	/// labeled alternative in <see cref="LanguageParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinue([NotNull] LanguageParser.ContinueContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Return</c>
	/// labeled alternative in <see cref="LanguageParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn([NotNull] LanguageParser.ReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.inicializacionesfor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInicializacionesfor([NotNull] LanguageParser.InicializacionesforContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TipoInt</c>
	/// labeled alternative in <see cref="LanguageParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTipoInt([NotNull] LanguageParser.TipoIntContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TipoFloat</c>
	/// labeled alternative in <see cref="LanguageParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTipoFloat([NotNull] LanguageParser.TipoFloatContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TipoString</c>
	/// labeled alternative in <see cref="LanguageParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTipoString([NotNull] LanguageParser.TipoStringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TipoBool</c>
	/// labeled alternative in <see cref="LanguageParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTipoBool([NotNull] LanguageParser.TipoBoolContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TipoRune</c>
	/// labeled alternative in <see cref="LanguageParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTipoRune([NotNull] LanguageParser.TipoRuneContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FunCall</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunCall([NotNull] LanguageParser.FunCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LanguageParser.atri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtri([NotNull] LanguageParser.AtriContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Or</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOr([NotNull] LanguageParser.OrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SliceIndex</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSliceIndex([NotNull] LanguageParser.SliceIndexContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Instancia</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInstancia([NotNull] LanguageParser.InstanciaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Parentesis</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParentesis([NotNull] LanguageParser.ParentesisContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Incre</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncre([NotNull] LanguageParser.IncreContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>String</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] LanguageParser.StringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Igualdad</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIgualdad([NotNull] LanguageParser.IgualdadContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Negacion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegacion([NotNull] LanguageParser.NegacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Nulo</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNulo([NotNull] LanguageParser.NuloContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SumRes</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSumRes([NotNull] LanguageParser.SumResContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Float</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloat([NotNull] LanguageParser.FloatContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Not</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNot([NotNull] LanguageParser.NotContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MulDivMod</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulDivMod([NotNull] LanguageParser.MulDivModContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Asignacion</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsignacion([NotNull] LanguageParser.AsignacionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Entero</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEntero([NotNull] LanguageParser.EnteroContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Relacionales</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelacionales([NotNull] LanguageParser.RelacionalesContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>And</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnd([NotNull] LanguageParser.AndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Decre</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecre([NotNull] LanguageParser.DecreContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CallExpr</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallExpr([NotNull] LanguageParser.CallExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Id</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitId([NotNull] LanguageParser.IdContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Boolean</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolean([NotNull] LanguageParser.BooleanContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Rune</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRune([NotNull] LanguageParser.RuneContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GetSlices</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGetSlices([NotNull] LanguageParser.GetSlicesContext context);
}
} // namespace analyzer
